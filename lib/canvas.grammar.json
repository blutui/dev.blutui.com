{
  "displayName": "canvas",
  "fileTypes": [
    "canvas",
    "html.canvas"
  ],
  "firstLineMatch": "<!(?i:DOCTYPE)|<(?i:html)|<\\?(?i:php)|\\{\\{|\\{%|\\{#",
  "foldingStartMarker": "(<(?i:body|div|dl|fieldset|form|head|li|ol|script|select|style|table|tbody|tfoot|thead|tr|ul)\\b.*?>|<!--(?!.*--\\s*>)|^<!-- #tminclude (?>.*?-->)$|\\{%\\s+(autoescape|block|embed|filter|for|if|macro|raw|sandbox|set|spaceless|trans|verbatim))",
  "foldingStopMarker": "(</(?i:body|div|dl|fieldset|form|head|li|ol|script|select|style|table|tbody|tfoot|thead|tr|ul)>|^(?!.*?<!--).*?--\\s*>|^<!-- end tminclude -->$|\\{%\\s+end(autoescape|block|embed|filter|for|if|macro|raw|sandbox|set|spaceless|trans|verbatim))",
  "name": "canvas",
  "patterns": [
    {
      "begin": "(<)([0-:A-Za-z]++)(?=[^>]*></\\2>)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.html"
        }
      },
      "end": "(>(<)/)(\\2)(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "meta.scope.between-tag-pair.html"
        },
        "3": {
          "name": "entity.name.tag.html"
        },
        "4": {
          "name": "punctuation.definition.tag.html"
        }
      },
      "name": "meta.tag.any.html",
      "patterns": [
        {
          "include": "#tag-stuff"
        }
      ]
    },
    {
      "begin": "(<\\?)(xml)",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.xml.html"
        }
      },
      "end": "(\\?>)",
      "name": "meta.tag.preprocessor.xml.html",
      "patterns": [
        {
          "include": "#tag-generic-attribute"
        },
        {
          "include": "#string-double-quoted"
        },
        {
          "include": "#string-single-quoted"
        }
      ]
    },
    {
      "begin": "<!--",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.html"
        }
      },
      "end": "--\\s*>",
      "name": "comment.block.html",
      "patterns": [
        {
          "match": "--",
          "name": "invalid.illegal.bad-comments-or-CDATA.html"
        },
        {
          "include": "#embedded-code"
        }
      ]
    },
    {
      "begin": "<!",
      "captures": {
        "0": {
          "name": "punctuation.definition.tag.html"
        }
      },
      "end": ">",
      "name": "meta.tag.sgml.html",
      "patterns": [
        {
          "begin": "(?i:DOCTYPE)",
          "captures": {
            "1": {
              "name": "entity.name.tag.doctype.html"
            }
          },
          "end": "(?=>)",
          "name": "meta.tag.sgml.doctype.html",
          "patterns": [
            {
              "match": "\"[^\">]*\"",
              "name": "string.quoted.double.doctype.identifiers-and-DTDs.html"
            }
          ]
        },
        {
          "begin": "\\[CDATA\\[",
          "end": "]](?=>)",
          "name": "constant.other.inline-data.html"
        },
        {
          "match": "(\\s*)(?!--|>)\\S(\\s*)",
          "name": "invalid.illegal.bad-comments-or-CDATA.html"
        }
      ]
    },
    {
      "include": "#embedded-code"
    },
    {
      "begin": "(?:^\\s+)?(<)((?i:style))\\b(?![^>]*/>)",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.style.html"
        },
        "3": {
          "name": "punctuation.definition.tag.html"
        }
      },
      "end": "(</)((?i:style))(>)(?:\\s*\\n)?",
      "name": "source.css.embedded.html",
      "patterns": [
        {
          "include": "#tag-stuff"
        },
        {
          "begin": "(>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.html"
            }
          },
          "end": "(?=</(?i:style))",
          "patterns": [
            {
              "include": "#embedded-code"
            },
            {
              "include": "source.css"
            }
          ]
        }
      ]
    },
    {
      "begin": "(?:^\\s+)?(<)((?i:script))\\b(?![^>]*/>)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.script.html"
        }
      },
      "end": "(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?",
      "endCaptures": {
        "2": {
          "name": "punctuation.definition.tag.html"
        }
      },
      "name": "source.js.embedded.html",
      "patterns": [
        {
          "include": "#tag-stuff"
        },
        {
          "begin": "(?<!</(?:script|SCRIPT))(>)",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.html"
            },
            "2": {
              "name": "entity.name.tag.script.html"
            }
          },
          "end": "(</)((?i:script))",
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "punctuation.definition.comment.js"
                }
              },
              "match": "(//).*?((?=</script)|$\\n?)",
              "name": "comment.line.double-slash.js"
            },
            {
              "begin": "/\\*",
              "captures": {
                "0": {
                  "name": "punctuation.definition.comment.js"
                }
              },
              "end": "\\*/|(?=</script)",
              "name": "comment.block.js"
            },
            {
              "include": "#php"
            },
            {
              "include": "#canvas-print-tag"
            },
            {
              "include": "#canvas-statement-tag"
            },
            {
              "include": "#canvas-comment-tag"
            },
            {
              "include": "source.js"
            }
          ]
        }
      ]
    },
    {
      "begin": "(?i)(?<=\\{%\\s(?:|include)js\\s%})",
      "end": "(?i)(?=\\{%\\send(?:|include)js\\s%})",
      "name": "source.js.embedded.canvas",
      "patterns": [
        {
          "include": "source.js"
        }
      ]
    },
    {
      "begin": "(?i)(?<=\\{%\\s(?:|include|includehires)css\\s%})",
      "end": "(?i)(?=\\{%\\send(?:|include|includehires)css\\s%})",
      "name": "source.css.embedded.canvas",
      "patterns": [
        {
          "include": "source.css"
        }
      ]
    },
    {
      "begin": "(?i)(?<=\\{%\\s(?:|include|includehires)scss\\s%})",
      "end": "(?i)(?=\\{%\\send(?:|include|includehires)scss\\s%})",
      "name": "source.css.scss.embedded.canvas",
      "patterns": [
        {
          "include": "source.css.scss"
        }
      ]
    },
    {
      "begin": "(</?)((?i:body|head|html))\\b",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.structure.any.html"
        }
      },
      "end": "(>)",
      "name": "meta.tag.structure.any.html",
      "patterns": [
        {
          "include": "#tag-stuff"
        }
      ]
    },
    {
      "begin": "(</?)((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre))\\b",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "entity.name.tag.block.any.html"
        }
      },
      "end": "(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "name": "meta.tag.block.any.html",
      "patterns": [
        {
          "include": "#tag-stuff"
        }
      ]
    },
    {
      "begin": "(</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|[qs]|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var))\\b",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "entity.name.tag.inline.any.html"
        }
      },
      "end": "((?: ?/)?>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "name": "meta.tag.inline.any.html",
      "patterns": [
        {
          "include": "#tag-stuff"
        }
      ]
    },
    {
      "begin": "(</?)([0-:A-Za-z]+)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "entity.name.tag.other.html"
        }
      },
      "end": "(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "name": "meta.tag.other.html",
      "patterns": [
        {
          "include": "#tag-stuff"
        }
      ]
    },
    {
      "include": "#entities"
    },
    {
      "match": "<>",
      "name": "invalid.illegal.incomplete.html"
    },
    {
      "match": "<",
      "name": "invalid.illegal.bad-angle-bracket.html"
    },
    {
      "include": "#canvas-print-tag"
    },
    {
      "include": "#canvas-statement-tag"
    },
    {
      "include": "#canvas-comment-tag"
    }
  ],
  "repository": {
    "embedded-code": {
      "patterns": [
        {
          "include": "#ruby"
        },
        {
          "include": "#php"
        },
        {
          "include": "#canvas-print-tag"
        },
        {
          "include": "#canvas-statement-tag"
        },
        {
          "include": "#canvas-comment-tag"
        },
        {
          "include": "#python"
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.entity.html"
            },
            "3": {
              "name": "punctuation.definition.entity.html"
            }
          },
          "match": "(&)([0-9A-Za-z]+|#[0-9]+|#x\\h+)(;)",
          "name": "constant.character.entity.html"
        },
        {
          "match": "&",
          "name": "invalid.illegal.bad-ampersand.html"
        }
      ]
    },
    "php": {
      "begin": "(?=(^\\s*)?<\\?)",
      "end": "(?!(^\\s*)?<\\?)",
      "patterns": [
        {
          "include": "source.php"
        }
      ]
    },
    "python": {
      "begin": "^\\s*<\\?python(?!.*\\?>)",
      "end": "\\?>(?:\\s*$\\n)?",
      "name": "source.python.embedded.html",
      "patterns": [
        {
          "include": "source.python"
        }
      ]
    },
    "ruby": {
      "patterns": [
        {
          "begin": "<%+#",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.erb"
            }
          },
          "end": "%>",
          "name": "comment.block.erb"
        },
        {
          "begin": "<%+(?!>)=?",
          "captures": {
            "0": {
              "name": "punctuation.section.embedded.ruby"
            }
          },
          "end": "-?%>",
          "name": "source.ruby.embedded.html",
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "punctuation.definition.comment.ruby"
                }
              },
              "match": "(#).*?(?=-?%>)",
              "name": "comment.line.number-sign.ruby"
            },
            {
              "include": "source.ruby"
            }
          ]
        },
        {
          "begin": "<\\?r(?!>)=?",
          "captures": {
            "0": {
              "name": "punctuation.section.embedded.ruby.nitro"
            }
          },
          "end": "-?\\?>",
          "name": "source.ruby.nitro.embedded.html",
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "punctuation.definition.comment.ruby.nitro"
                }
              },
              "match": "(#).*?(?=-?\\?>)",
              "name": "comment.line.number-sign.ruby.nitro"
            },
            {
              "include": "source.ruby"
            }
          ]
        }
      ]
    },
    "string-double-quoted": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.html"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.html"
        }
      },
      "name": "string.quoted.double.html",
      "patterns": [
        {
          "include": "#embedded-code"
        },
        {
          "include": "#entities"
        }
      ]
    },
    "string-single-quoted": {
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.html"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.html"
        }
      },
      "name": "string.quoted.single.html",
      "patterns": [
        {
          "include": "#embedded-code"
        },
        {
          "include": "#entities"
        }
      ]
    },
    "tag-generic-attribute": {
      "match": "\\b([-:A-Za-z]+)",
      "name": "entity.other.attribute-name.html"
    },
    "tag-id-attribute": {
      "begin": "\\b(id)\\b\\s*(=)",
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.id.html"
        },
        "2": {
          "name": "punctuation.separator.key-value.html"
        }
      },
      "end": "(?<=[\"'])",
      "name": "meta.attribute-with-value.id.html",
      "patterns": [
        {
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.html"
            }
          },
          "contentName": "meta.toc-list.id.html",
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.html"
            }
          },
          "name": "string.quoted.double.html",
          "patterns": [
            {
              "include": "#embedded-code"
            },
            {
              "include": "#entities"
            }
          ]
        },
        {
          "begin": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.html"
            }
          },
          "contentName": "meta.toc-list.id.html",
          "end": "'",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.html"
            }
          },
          "name": "string.quoted.single.html",
          "patterns": [
            {
              "include": "#embedded-code"
            },
            {
              "include": "#entities"
            }
          ]
        }
      ]
    },
    "tag-stuff": {
      "patterns": [
        {
          "include": "#tag-id-attribute"
        },
        {
          "include": "#tag-generic-attribute"
        },
        {
          "include": "#string-double-quoted"
        },
        {
          "include": "#string-single-quoted"
        },
        {
          "include": "#embedded-code"
        }
      ]
    },
    "canvas-arrays": {
      "begin": "(?<=[(,:\\[{\\s])\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.array.begin.canvas"
        }
      },
      "end": "]",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.array.end.canvas"
        }
      },
      "name": "meta.array.canvas",
      "patterns": [
        {
          "include": "#canvas-arrays"
        },
        {
          "include": "#canvas-hashes"
        },
        {
          "include": "#canvas-constants"
        },
        {
          "include": "#canvas-operators"
        },
        {
          "include": "#canvas-strings"
        },
        {
          "include": "#canvas-functions-warg"
        },
        {
          "include": "#canvas-functions"
        },
        {
          "include": "#canvas-macros"
        },
        {
          "include": "#canvas-objects"
        },
        {
          "include": "#canvas-properties"
        },
        {
          "include": "#canvas-filters-warg"
        },
        {
          "include": "#canvas-filters"
        },
        {
          "include": "#canvas-filters-warg-ud"
        },
        {
          "include": "#canvas-filters-ud"
        },
        {
          "match": ",",
          "name": "punctuation.separator.object.canvas"
        }
      ]
    },
    "canvas-comment-tag": {
      "begin": "\\{#-?",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.begin.canvas"
        }
      },
      "end": "-?#}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.comment.end.canvas"
        }
      },
      "name": "comment.block.canvas"
    },
    "canvas-constants": {
      "patterns": [
        {
          "match": "(?i)(?<=[(,:\\[{\\s])(?:true|false|null|none)(?=[]),}\\s])",
          "name": "constant.language.canvas"
        },
        {
          "match": "(?<=[(,:\\[{\\s]|\\.\\.|\\*\\*)[0-9]+(?:\\.[0-9]+)?(?=[]),}\\s]|\\.\\.|\\*\\*)",
          "name": "constant.numeric.canvas"
        }
      ]
    },
    "canvas-filters": {
      "captures": {
        "1": {
          "name": "support.function.canvas"
        }
      },
      "match": "(?<=[]\"')0-9A-Z_a-z\\x7F-ÿ]\\||\\{%\\sfilter\\s)(abs|capitalize|e(?:scape)?|first|image_tag|join|(?:json|url)_encode|keys|last|length|lower|nl2br|number_format|raw|reading_time|reverse|round|slug|sort|spaceless|striptags|title|trim|upper|url_encode)(?=[]),:|}\\s]|\\.\\.|\\*\\*)"
    },
    "canvas-filters-ud": {
      "captures": {
        "1": {
          "name": "meta.function-call.other.canvas"
        }
      },
      "match": "(?<=[]\"')0-9A-Z_a-z\\x7F-ÿ]\\||\\{%\\sfilter\\s)([A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*)"
    },
    "canvas-filters-warg": {
      "begin": "(?<=[]\"')0-9A-Z_a-z\\x7F-ÿ]\\||\\{%\\sfilter\\s)(batch|convert_encoding|date|date_modify|default|e(?:scape)?|format|group_by|image_url|join|merge|number_format|reading_time|reduce|replace|reverse|round|slice|slug|sort|split|striptags|trim)(\\()",
      "beginCaptures": {
        "1": {
          "name": "support.function.canvas"
        },
        "2": {
          "name": "punctuation.definition.parameters.begin.canvas"
        }
      },
      "contentName": "meta.function.arguments.canvas",
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.end.canvas"
        }
      },
      "patterns": [
        {
          "include": "#canvas-constants"
        },
        {
          "include": "#canvas-operators"
        },
        {
          "include": "#canvas-functions-warg"
        },
        {
          "include": "#canvas-functions"
        },
        {
          "include": "#canvas-macros"
        },
        {
          "include": "#canvas-objects"
        },
        {
          "include": "#canvas-properties"
        },
        {
          "include": "#canvas-filters-warg"
        },
        {
          "include": "#canvas-filters"
        },
        {
          "include": "#canvas-filters-warg-ud"
        },
        {
          "include": "#canvas-filters-ud"
        },
        {
          "include": "#canvas-strings"
        },
        {
          "include": "#canvas-arrays"
        },
        {
          "include": "#canvas-hashes"
        }
      ]
    },
    "canvas-filters-warg-ud": {
      "begin": "(?<=[]\"')0-9A-Z_a-z\\x7F-ÿ]\\||\\{%\\sfilter\\s)([A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*)(\\()",
      "beginCaptures": {
        "1": {
          "name": "meta.function-call.other.canvas"
        },
        "2": {
          "name": "punctuation.definition.parameters.begin.canvas"
        }
      },
      "contentName": "meta.function.arguments.canvas",
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.end.canvas"
        }
      },
      "patterns": [
        {
          "include": "#canvas-constants"
        },
        {
          "include": "#canvas-functions-warg"
        },
        {
          "include": "#canvas-functions"
        },
        {
          "include": "#canvas-macros"
        },
        {
          "include": "#canvas-objects"
        },
        {
          "include": "#canvas-properties"
        },
        {
          "include": "#canvas-filters-warg"
        },
        {
          "include": "#canvas-filters"
        },
        {
          "include": "#canvas-filters-warg-ud"
        },
        {
          "include": "#canvas-filters-ud"
        },
        {
          "include": "#canvas-strings"
        },
        {
          "include": "#canvas-arrays"
        },
        {
          "include": "#canvas-hashes"
        }
      ]
    },
    "canvas-functions": {
      "captures": {
        "1": {
          "name": "support.function.canvas"
        }
      },
      "match": "(?<=is\\s)(defined|empty|even|iterable|odd)"
    },
    "canvas-functions-warg": {
      "begin": "(?<=[(,:\\[{\\s])(agent|asset|attribute|block|constant|cycle|date|divisible by|dump|include|max|min|parent|random|range|recaptcha|same as|source|template_from_string)(\\()",
      "beginCaptures": {
        "1": {
          "name": "support.function.canvas"
        },
        "2": {
          "name": "punctuation.definition.parameters.begin.canvas"
        }
      },
      "contentName": "meta.function.arguments.canvas",
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.end.canvas"
        }
      },
      "patterns": [
        {
          "include": "#canvas-constants"
        },
        {
          "include": "#canvas-functions-warg"
        },
        {
          "include": "#canvas-functions"
        },
        {
          "include": "#canvas-macros"
        },
        {
          "include": "#canvas-objects"
        },
        {
          "include": "#canvas-properties"
        },
        {
          "include": "#canvas-filters-warg"
        },
        {
          "include": "#canvas-filters"
        },
        {
          "include": "#canvas-filters-warg-ud"
        },
        {
          "include": "#canvas-filters-ud"
        },
        {
          "include": "#canvas-strings"
        },
        {
          "include": "#canvas-arrays"
        }
      ]
    },
    "canvas-hashes": {
      "begin": "(?<=[(,:\\[{\\s])\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.hash.begin.canvas"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.hash.end.canvas"
        }
      },
      "name": "meta.hash.canvas",
      "patterns": [
        {
          "include": "#canvas-hashes"
        },
        {
          "include": "#canvas-arrays"
        },
        {
          "include": "#canvas-constants"
        },
        {
          "include": "#canvas-operators"
        },
        {
          "include": "#canvas-strings"
        },
        {
          "include": "#canvas-functions-warg"
        },
        {
          "include": "#canvas-functions"
        },
        {
          "include": "#canvas-macros"
        },
        {
          "include": "#canvas-objects"
        },
        {
          "include": "#canvas-properties"
        },
        {
          "include": "#canvas-filters-warg"
        },
        {
          "include": "#canvas-filters"
        },
        {
          "include": "#canvas-filters-warg-ud"
        },
        {
          "include": "#canvas-filters-ud"
        },
        {
          "match": ":",
          "name": "punctuation.separator.key-value.canvas"
        },
        {
          "match": ",",
          "name": "punctuation.separator.object.canvas"
        }
      ]
    },
    "canvas-keywords": {
      "match": "(?<=\\s)((?:end)?(?:autoescape|block|embed|filter|for|if|macro|raw|sandbox|set|spaceless|trans|verbatim)|as|do|else|elseif|extends|flush|from|ignore missing|import|include|only|use|with)(?=\\s)",
      "name": "keyword.control.canvas"
    },
    "canvas-macros": {
      "begin": "(?<=[(,:\\[{\\s])([A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*)(?:(\\.)([A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*))?(\\()",
      "beginCaptures": {
        "1": {
          "name": "meta.function-call.canvas"
        },
        "2": {
          "name": "punctuation.separator.property.canvas"
        },
        "3": {
          "name": "variable.other.property.canvas"
        },
        "4": {
          "name": "punctuation.definition.parameters.begin.canvas"
        }
      },
      "contentName": "meta.function.arguments.canvas",
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.end.canvas"
        }
      },
      "patterns": [
        {
          "include": "#canvas-constants"
        },
        {
          "include": "#canvas-operators"
        },
        {
          "include": "#canvas-functions-warg"
        },
        {
          "include": "#canvas-functions"
        },
        {
          "include": "#canvas-macros"
        },
        {
          "include": "#canvas-objects"
        },
        {
          "include": "#canvas-properties"
        },
        {
          "include": "#canvas-filters-warg"
        },
        {
          "include": "#canvas-filters"
        },
        {
          "include": "#canvas-filters-warg-ud"
        },
        {
          "include": "#canvas-filters-ud"
        },
        {
          "include": "#canvas-strings"
        },
        {
          "include": "#canvas-arrays"
        },
        {
          "include": "#canvas-hashes"
        }
      ]
    },
    "canvas-objects": {
      "captures": {
        "1": {
          "name": "variable.other.canvas"
        }
      },
      "match": "(?<=[(,:\\[{\\s])([A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*)(?=[](),.:\\[|}\\s])"
    },
    "canvas-operators": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "keyword.operator.arithmetic.canvas"
            }
          },
          "match": "(?<=\\s)([-+]|//?|%|\\*\\*?)(?=\\s)"
        },
        {
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.canvas"
            }
          },
          "match": "(?<=\\s)([=~])(?=\\s)"
        },
        {
          "captures": {
            "1": {
              "name": "keyword.operator.bitwise.canvas"
            }
          },
          "match": "(?<=\\s)(b-(?:and|or|xor))(?=\\s)"
        },
        {
          "captures": {
            "1": {
              "name": "keyword.operator.comparison.canvas"
            }
          },
          "match": "(?<=\\s)([!=]=|<=?|>=?|(?:not )?in|is(?: not)?|(?:ends|starts) with|matches)(?=\\s)"
        },
        {
          "captures": {
            "1": {
              "name": "keyword.operator.logical.canvas"
            }
          },
          "match": "(?<=\\s)([:?]|\\?:|\\?\\?|and|not|or)(?=\\s)"
        },
        {
          "captures": {
            "0": {
              "name": "keyword.operator.other.canvas"
            }
          },
          "match": "(?<=[]\"')0-9A-Z_a-z\\x7F-ÿ])\\.\\.(?=[\"'0-9A-Z_a-z\\x7F-ÿ])"
        },
        {
          "captures": {
            "0": {
              "name": "keyword.operator.other.canvas"
            }
          },
          "match": "(?<=[]\"')0-9A-Z_a-z}\\x7F-ÿ])\\|(?=[A-Z_a-z\\x7F-ÿ])"
        }
      ]
    },
    "canvas-print-tag": {
      "begin": "\\{\\{-?",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.tag.canvas"
        }
      },
      "end": "-?}}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.tag.canvas"
        }
      },
      "name": "meta.tag.template.value.canvas",
      "patterns": [
        {
          "include": "#canvas-constants"
        },
        {
          "include": "#canvas-operators"
        },
        {
          "include": "#canvas-functions-warg"
        },
        {
          "include": "#canvas-functions"
        },
        {
          "include": "#canvas-macros"
        },
        {
          "include": "#canvas-objects"
        },
        {
          "include": "#canvas-properties"
        },
        {
          "include": "#canvas-filters-warg"
        },
        {
          "include": "#canvas-filters"
        },
        {
          "include": "#canvas-filters-warg-ud"
        },
        {
          "include": "#canvas-filters-ud"
        },
        {
          "include": "#canvas-strings"
        },
        {
          "include": "#canvas-arrays"
        },
        {
          "include": "#canvas-hashes"
        }
      ]
    },
    "canvas-properties": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.separator.property.canvas"
            },
            "2": {
              "name": "variable.other.property.canvas"
            }
          },
          "match": "(?<=[0-9A-Z_a-z\\x7F-ÿ])(\\.)([A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*)(?=[]),.:\\[|}\\s])"
        },
        {
          "begin": "(?<=[0-9A-Z_a-z\\x7F-ÿ])(\\.)([A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*)(\\()",
          "beginCaptures": {
            "1": {
              "name": "punctuation.separator.property.canvas"
            },
            "2": {
              "name": "variable.other.property.canvas"
            },
            "3": {
              "name": "punctuation.definition.parameters.begin.canvas"
            }
          },
          "contentName": "meta.function.arguments.canvas",
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.end.canvas"
            }
          },
          "patterns": [
            {
              "include": "#canvas-constants"
            },
            {
              "include": "#canvas-functions-warg"
            },
            {
              "include": "#canvas-functions"
            },
            {
              "include": "#canvas-macros"
            },
            {
              "include": "#canvas-objects"
            },
            {
              "include": "#canvas-properties"
            },
            {
              "include": "#canvas-filters-warg"
            },
            {
              "include": "#canvas-filters"
            },
            {
              "include": "#canvas-filters-warg-ud"
            },
            {
              "include": "#canvas-filters-ud"
            },
            {
              "include": "#canvas-strings"
            },
            {
              "include": "#canvas-arrays"
            }
          ]
        },
        {
          "captures": {
            "1": {
              "name": "punctuation.section.array.begin.canvas"
            },
            "2": {
              "name": "variable.other.property.canvas"
            },
            "3": {
              "name": "punctuation.section.array.end.canvas"
            },
            "4": {
              "name": "punctuation.section.array.begin.canvas"
            },
            "5": {
              "name": "variable.other.property.canvas"
            },
            "6": {
              "name": "punctuation.section.array.end.canvas"
            },
            "7": {
              "name": "punctuation.section.array.begin.canvas"
            },
            "8": {
              "name": "variable.other.property.canvas"
            },
            "9": {
              "name": "punctuation.section.array.end.canvas"
            }
          },
          "match": "(?<=[]0-9A-Z_a-z\\x7F-ÿ])(?:(\\[)('[A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*')(])|(\\[)(\"[A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*\")(])|(\\[)([A-Z_a-z\\x7F-ÿ][0-9A-Z_a-z\\x7F-ÿ]*)(]))"
        }
      ]
    },
    "canvas-statement-tag": {
      "begin": "\\{%-?",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.tag.canvas"
        }
      },
      "end": "-?%}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.tag.canvas"
        }
      },
      "name": "meta.tag.template.block.canvas",
      "patterns": [
        {
          "include": "#canvas-constants"
        },
        {
          "include": "#canvas-keywords"
        },
        {
          "include": "#canvas-operators"
        },
        {
          "include": "#canvas-functions-warg"
        },
        {
          "include": "#canvas-functions"
        },
        {
          "include": "#canvas-macros"
        },
        {
          "include": "#canvas-filters-warg"
        },
        {
          "include": "#canvas-filters"
        },
        {
          "include": "#canvas-filters-warg-ud"
        },
        {
          "include": "#canvas-filters-ud"
        },
        {
          "include": "#canvas-objects"
        },
        {
          "include": "#canvas-properties"
        },
        {
          "include": "#canvas-strings"
        },
        {
          "include": "#canvas-arrays"
        },
        {
          "include": "#canvas-hashes"
        }
      ]
    },
    "canvas-strings": {
      "patterns": [
        {
          "begin": "(?:(?<!\\\\)|(?<=\\\\\\\\))'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.canvas"
            }
          },
          "end": "(?:(?<!\\\\)|(?<=\\\\\\\\))'",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.canvas"
            }
          },
          "name": "string.quoted.single.canvas"
        },
        {
          "begin": "(?:(?<!\\\\)|(?<=\\\\\\\\))\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.canvas"
            }
          },
          "end": "(?:(?<!\\\\)|(?<=\\\\\\\\))\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.canvas"
            }
          },
          "name": "string.quoted.double.canvas"
        }
      ]
    }
  },
  "scopeName": "text.html.canvas"
}
